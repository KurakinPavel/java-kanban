DROP TABLE IF EXISTS PUBLIC.EPIC_TASKS;
DROP TABLE IF EXISTS PUBLIC.TASK_DEPEND_TASKS;
DROP TABLE IF EXISTS PUBLIC.TASKS;
DROP TABLE IF EXISTS PUBLIC.EPICS;
DROP TABLE IF EXISTS PUBLIC.USERS;

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR(100) NOT NULL,
    EMAIL   VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.EPICS
(
    EPIC_ID        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    COORDINATOR_ID INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE RESTRICT,
    TITLE          VARCHAR(200) NOT NULL,
    DESCRIPTION    VARCHAR(2000) NOT NULL,
    STATUS         INTEGER NOT NULL,
    DURATION       INTEGER NOT NULL,
    START_DATE     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_DATE       TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.TASKS
(
    TASK_ID      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EPIC_ID      INTEGER REFERENCES PUBLIC.EPICS (EPIC_ID) ON DELETE RESTRICT,
    PERFORMER_ID INTEGER REFERENCES PUBLIC.USERS (USER_ID) ON DELETE RESTRICT,
    TITLE        VARCHAR(200) NOT NULL,
    DESCRIPTION  VARCHAR(2000) NOT NULL,
    STATUS       INTEGER NOT NULL,
    DURATION     INTEGER NOT NULL,
    START_DATE   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_DATE     TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.TASK_DEPEND_TASKS
(
    PAIR_ID        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID        INTEGER REFERENCES PUBLIC.TASKS (TASK_ID) ON DELETE CASCADE,
    DEPEND_TASK_ID INTEGER REFERENCES PUBLIC.TASKS (TASK_ID) ON DELETE CASCADE,
    CONSTRAINT uq_task_depend_task UNIQUE (TASK_ID, DEPEND_TASK_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.EPIC_TASKS
(
    PAIR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EPIC_ID INTEGER REFERENCES PUBLIC.EPICS (EPIC_ID) ON DELETE CASCADE,
    TASK_ID INTEGER REFERENCES PUBLIC.TASKS (TASK_ID) ON DELETE CASCADE,
    CONSTRAINT uq_epic_task UNIQUE (EPIC_ID, TASK_ID)
);
